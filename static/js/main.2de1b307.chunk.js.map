{"version":3,"sources":["Components/Attribution.js","Components/Header.js","Components/TaskItem.js","Components/TaskList.js","Components/TaskFilter.js","Components/ShowSettingsPanel.js","hooks/useWindowSize.js","Pages/Home.js","App.js","index.js"],"names":["Attribution","className","href","target","rel","Header","id","onClick","document","querySelector","classList","toggle","TaskItem","props","task","deleteTask","toggleTaskStatus","provided","useState","isFinished","isTaskFinished","setIsTaskFinished","spanClasses","setSpanClasses","handleChange","e","preventDefault","matches","parentNode","useEffect","ref","innerRef","draggableProps","dragHandleProps","type","checked","onChange","htmlFor","title","TaskList","handleOnDragEnd","onDragEnd","droppableId","droppableProps","taskList","map","index","draggableId","placeholder","TaskFilter","toggleActive","querySelectorAll","forEach","option","remove","add","el","ShowSettingsPanel","activeTasks","filter","item","clearFinished","window","screen","width","length","screenWidth","useWindowSize","undefined","height","windowSize","setWindowSize","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener","Home","localStorage","startingTasks","v4","inputEl","useRef","JSON","parse","getItem","setTaskList","setItem","stringify","onSubmit","inputVal","value","newTask","prevTasks","current","focus","onFocus","onBlur","console","log","destination","tasks","splice","source","reorderedTask","taskId","i","findIndex","newTasklist","Array","from","App","basename","process","path","component","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2de1b307.chunk.js","sourcesContent":["const Attribution = () => {\n    return (\n        <div className=\"attribution\">\n            Challenge by <a href=\"https://www.frontendmentor.io?ref=challenge\" target=\"_blank\" rel=\"noreferrer\">Frontend Mentor</a>.\n            Coded by <a href=\"https://github.com/JiriPohanka\" target=\"_blank\" rel=\"noreferrer\">Jiří Pohanka</a>.\n        </div>\n    )\n}\n\nexport default Attribution\n","const Header = () => {\n\n    function toggleNightMode() {\n       document.querySelector(':root').classList.toggle('dark-mode')\n    }\n\n    return (\n        <header>\n            <h1>TODO</h1>\n            <button id=\"night-mode\" onClick={toggleNightMode}><span className=\"night-mode-btn\"></span></button>\n        </header>\n    )\n}\n\nexport default Header\n","import { useState, useEffect } from \"react\"\n\nconst TaskItem = (props) => {\n    const task = props.task\n    const deleteTask = props.deleteTask\n    const toggleTaskStatus = props.toggleTaskStatus\n    const provided = props.provided\n\n    let [isTaskFinished, setIsTaskFinished] = useState(props.task.isFinished)\n    let [spanClasses, setSpanClasses] = useState(`is-${task.id}-finished checkmark`)\n\n    function handleChange(e) {\n        e.preventDefault()\n        if (e.target.matches('.delete-task-btn')) {\n            return\n        }\n        setIsTaskFinished(!isTaskFinished)\n        document.querySelector(`label[for=\"is-${task.id}-finished\"]`).classList.toggle('finished-task')\n        document.querySelector(`label[for=\"is-${task.id}-finished\"]`).parentNode.classList.toggle('finished')\n        document.querySelector(`.${`is-${task.id}-finished`}`).classList.toggle('checked')\n        toggleTaskStatus(task.id)\n    }\n\n    function handleClick(e) {\n        e.preventDefault()\n        deleteTask(task.id)\n    }\n\n    useEffect(() => {\n        if (task.isFinished) {\n            setSpanClasses(`is-${task.id}-finished checkmark checked`)\n            document.querySelector(`label[for=\"is-${task.id}-finished\"]`).classList.toggle('finished-task')\n            document.querySelector(`label[for=\"is-${task.id}-finished\"]`).parentNode.classList.toggle('finished')\n        }\n    }, [])\n\n    return (\n        <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} className=\"task-item\" id={task.id} onClick={handleChange}>\n            <input type=\"checkbox\" id={`is-${task.id}-finished`} checked={task.isFinished} onChange={handleChange} />\n            <span className={spanClasses} />\n            <label className={`is-${task.id}-finished task-label`} htmlFor={`is-${task.id}-finished`}>{task.title}</label>\n            <button className=\"btn delete-task-btn\" onClick={handleClick} />\n        </div>\n    )\n}\n\nexport default TaskItem\n","import { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport TaskItem from \"./TaskItem\"\n\nconst TaskList = (props) => {\n    const handleOnDragEnd = props.handleOnDragEnd\n\n    return (\n        <DragDropContext onDragEnd={handleOnDragEnd}>\n            <Droppable droppableId=\"taskList\">\n                {(provided) => (\n                    <div className=\"tasklist\" {...provided.droppableProps} ref={provided.innerRef}>\n                        {props.taskList.map((task, index) => <Draggable key={task.id} draggableId={task.id} index={index}>{(provided) => <TaskItem provided={provided} task={task} toggleTaskStatus={props.toggleTaskStatus} deleteTask={props.deleteTask} />}</Draggable>)}\n                        {provided.placeholder}\n                    </div>\n                )}\n            </Droppable>\n        </DragDropContext>\n    )\n}\n\nexport default TaskList\n","const TaskFilter = (props) => {\n\n    function toggleActive(e) {\n        const options = document.querySelectorAll('.visibility-option')\n        options.forEach((option) => option.classList.remove('active'))\n        const buttonClicked = e.target\n        buttonClicked.classList.add('active')\n    }\n\n    function showAll(e) {\n        toggleActive(e)\n        document.querySelectorAll('.task-item').forEach(el => el.classList.remove('hidden'))\n    }\n\n    function showActiveOnly(e) {\n        toggleActive(e)\n        document.querySelectorAll('.task-item').forEach(el => el.classList.remove('hidden'))\n        document.querySelectorAll('.task-item.finished').forEach(el => el.classList.add('hidden'))\n    }\n\n    function showFinishedOnly(e) {\n        toggleActive(e)\n        document.querySelectorAll('.task-item').forEach(el => el.classList.remove('hidden'))\n        document.querySelectorAll('.task-item:not(.finished)').forEach(el => el.classList.add('hidden'))\n    }\n\n    return (\n        <div className=\"filter-options\">\n            <button data-option-id=\"0\" className=\"btn control-button visibility-option active\" onClick={showAll}>All</button>\n            <button data-option-id=\"1\" className=\"btn control-button visibility-option\" onClick={showActiveOnly}>Active</button>\n            <button data-option-id=\"2\" className=\"btn control-button visibility-option\" onClick={showFinishedOnly}>Completed</button>\n        </div>\n\n    )\n}\n\nexport default TaskFilter\n","import TaskFilter from \"./TaskFilter\"\n\nconst ShowSettingsPanel = (props) => {\n\n    const activeTasks = props.taskList.filter(item => !item.isFinished)\n    const clearFinished = props.clearFinished\n\n    let screenWidth = window.screen.width\n\n    if (screenWidth > 480) {\n        return (\n            <div className=\"settings-panel\">\n                <div className=\"settings-wrap\">\n                    <span className=\"task-counter\">{activeTasks.length} items left</span>\n                    {props.screenWidth >= 480 && <TaskFilter/>}\n                    <button className=\"btn control-button clear-button\" onClick={clearFinished}>Clear Completed</button>\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <>\n                <div className=\"settings-panel\">\n                    <div className=\"settings-wrap\">\n                        <span className=\"task-counter\">{activeTasks.length} items left</span>\n                        <button className=\"btn control-button clear-button\" onClick={clearFinished}>Clear Completed</button>\n                    </div>\n                </div>\n            </>\n        )\n    }\n\n\n}\n\nexport default ShowSettingsPanel\n","import { useState, useEffect } from \"react\";\n\n// Hook\nfunction useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n}\n\nexport default useWindowSize","import Header from \"../Components/Header\"\nimport TaskList from \"../Components/TaskList\"\nimport TaskFilter from \"../Components/TaskFilter\"\nimport ShowSettingsPanel from \"../Components/ShowSettingsPanel\"\nimport { useRef, useState, useEffect } from \"react\"\nimport { v4 } from \"uuid\"\nimport useWindowSize from \"../hooks/useWindowSize\"\n\nconst Home = () => {\n\n    const screenWidth = useWindowSize().width\n    const localStorage = window.localStorage\n\n    const startingTasks = [\n        { id: v4(), title: \"Complete online JavaScript course\", isFinished: true },\n        { id: v4(), title: \"Jog around the park 3x\", isFinished: false },\n        { id: v4(), title: \"10 minutes meditation\", isFinished: false },\n        { id: v4(), title: \"Read for 1 hour\", isFinished: false },\n        { id: v4(), title: \"Pick up groceries\", isFinished: false },\n        { id: v4(), title: \"Complete Todo App on Frontend Mentor\", isFinished: false }\n    ]\n\n    const inputEl = useRef()\n    const [taskList, setTaskList] = useState(JSON.parse(localStorage.getItem('tasks')) ?? startingTasks)\n\n    useEffect(() => {\n        localStorage.setItem('tasks', JSON.stringify(taskList))\n    })\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        const inputVal = e.target[0].value\n        const id = v4()\n        const newTask = { id, title: inputVal, isFinished: false }\n        setTaskList((prevTasks) => [...prevTasks, newTask])\n        inputEl.current.value = \"\"\n    }\n\n    function deleteTask(taskId) {\n        const i = taskList.findIndex(task => task.id === taskId)\n        const newTasklist = Array.from(taskList)\n        newTasklist.splice(i, 1)\n        setTaskList(newTasklist)\n    }\n\n    function toggleTaskStatus(taskId) {\n        console.log(\"toggleTaskStatus\")\n        const i = taskList.findIndex(task => task.id === taskId)\n        console.log(i)\n        setTaskList(taskList.map((task, index) => {\n            if (index === i) {\n                task.isFinished = !task.isFinished\n            }\n            return task\n        }))\n    }\n\n    function clearFinished() {\n        setTaskList(taskList.filter(item => item.isFinished === false))\n    }\n\n    function handleOnDragEnd(e) {\n        console.log(e)\n        if (e.destination === null) {\n            return\n        }\n        const tasks = [...taskList]\n        const [reorderedTask] = tasks.splice(e.source.index, 1)\n        tasks.splice(e.destination.index, 0, reorderedTask)\n        setTaskList(tasks)\n    }\n\n    function handleFocus() {\n        document.querySelector('.decor-checkmark').classList.add('focused-input')\n    }\n\n    function handleBlur() {\n        document.querySelector('.decor-checkmark').classList.remove('focused-input')\n    }\n\n    function forceFocus() {\n        document.querySelector('input').focus()\n    }\n\n\n    return (\n        <div className=\"app-wrapper\">\n            <Header />\n            <form onSubmit={handleSubmit}>\n                <div className=\"input-wrap\" onClick={forceFocus}>\n                    <span className=\"decor-checkmark\" />\n                    <input ref={inputEl} type=\"text\" placeholder=\"Create a new todo\" onFocus={handleFocus} onBlur={handleBlur} />\n                </div>\n            </form>\n            <div className=\"tasklist-wrap\">\n                <TaskList handleOnDragEnd={handleOnDragEnd} taskList={taskList} toggleTaskStatus={toggleTaskStatus} deleteTask={deleteTask} />\n                <ShowSettingsPanel screenWidth={screenWidth} taskList={taskList} clearFinished={clearFinished} />\n            </div>\n            {screenWidth < 480 && <TaskFilter />}\n        </div>\n    )\n}\n\nexport default Home\n","import Attribution from './Components/Attribution';\nimport {\n  BrowserRouter as Browser,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport Home from './Pages/Home';\n\nfunction App() {\n\n  return (\n    <>\n      <div className=\"bgr-strip\" />\n      <Browser basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path=\"/\" component={Home} exact />\n        </Switch>\n        <div className=\"drag-drop\">drag and drop to reorder list</div>\n        <Attribution />\n\n      </Browser>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}